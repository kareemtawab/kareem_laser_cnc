
#include <Arduino.h>
#include <U8g2lib.h>

U8G2_ST7920_128X64_2_SW_SPI u8g2(U8G2_R0, 10, 9, 8, 7);
/*
  Constructor template used: U8G2_ST7920_128X64_2_SW_SPI(rotation, clock, data, cs [, reset])

  E = Clock          pin 11
  RW = Data = MOSI   pin 10
  RS = Chip Select   pin 9
  RST = Reset        pin 8
  PSB                GND for serial interface
*/
static const unsigned char intro[] PROGMEM =
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //
  0x00, 0x00, 0x00, 0xC0, 0x01, 0x00, 0x00, 0x00, //                               ###
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, //                               ####
  0x00, 0x00, 0x00, 0xE0, 0x07, 0x00, 0x00, 0x00, //                              ######
  0x00, 0x00, 0x00, 0xE0, 0x07, 0x00, 0x00, 0x00, //                              ######
  0x00, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, //                             ########
  0x00, 0x00, 0x00, 0x78, 0x0F, 0x00, 0x00, 0x00, //                            #### ####
  0x00, 0x00, 0x00, 0x78, 0x1E, 0x00, 0x00, 0x00, //                            ####  ####
  0x00, 0x00, 0x00, 0x3C, 0x1E, 0x00, 0x00, 0x00, //                           ####   ####
  0x00, 0x00, 0x00, 0x3C, 0x3C, 0x00, 0x00, 0x00, //                           ####    ####
  0x00, 0x00, 0x00, 0x1E, 0x78, 0x00, 0x00, 0x00, //                          ####      ####
  0x00, 0x00, 0x00, 0x1E, 0x78, 0x00, 0x00, 0x00, //                          ####      ####
  0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, //                         ####        ####
  0x00, 0x00, 0x80, 0x07, 0xF0, 0x00, 0x00, 0x00, //                        ####         ####
  0x00, 0x00, 0x80, 0x07, 0xE0, 0x01, 0x00, 0x00, //                        ####          ####
  0x00, 0x00, 0xC0, 0x03, 0xC0, 0x03, 0x00, 0x00, //                       ####            ####
  0x00, 0x00, 0xC0, 0x03, 0xC0, 0x03, 0x00, 0x00, //                       ####            ####
  0x00, 0x00, 0xE0, 0x01, 0x80, 0x07, 0x00, 0x00, //                      ####              ####
  0x00, 0x00, 0xE0, 0x01, 0x80, 0x07, 0x00, 0x00, //                      ####              ####
  0x00, 0x00, 0xF0, 0x00, 0x00, 0x0F, 0x00, 0x00, //                     ####                ####
  0x00, 0x00, 0x78, 0x00, 0x00, 0x0F, 0x00, 0x00, //                    ####                 ####
  0x00, 0x00, 0x78, 0x80, 0x00, 0x1E, 0x00, 0x00, //                    ####        #         ####
  0x00, 0x00, 0x3C, 0x80, 0x01, 0x3C, 0x00, 0x00, //                   ####         ##         ####
  0x00, 0x00, 0x3C, 0x82, 0x20, 0x3C, 0x00, 0x00, //                   ####   #     #     #    ####
  0x00, 0x00, 0x1E, 0x86, 0x60, 0x78, 0x00, 0x00, //                  ####    ##    #     ##    ####
  0x00, 0x00, 0x0F, 0x86, 0x30, 0x78, 0x00, 0x00, //                 ####     ##    #    ##     ####
  0x00, 0x00, 0x0F, 0xAC, 0x12, 0xF0, 0x00, 0x00, //                 ####      ## # # #  #       ####
  0x00, 0x80, 0x07, 0xA8, 0x1A, 0xF0, 0x00, 0x00, //                ####        # # # # ##       ####
  0x00, 0x80, 0x37, 0xFA, 0x2A, 0xE6, 0x01, 0x00, //                #### ##   # ##### # # #   ##  ####
  0x00, 0xC0, 0xE3, 0xD6, 0x36, 0xC7, 0x03, 0x00, //               ####   ### ## # ## ## ##  ###   ####
  0x00, 0xC0, 0xC3, 0xED, 0xDF, 0xC1, 0x03, 0x00, //               ####    ### ## ######## ###     ####
  0x00, 0xE0, 0x01, 0xF7, 0x6F, 0x80, 0x07, 0x00, //              ####       ### ######## ##        ####
  0x00, 0xF0, 0x80, 0xFD, 0x9F, 0x80, 0x07, 0x00, //             ####       ## ###########  #       ####
  0x00, 0xF0, 0x00, 0xFF, 0xFF, 0x00, 0x0F, 0x00, //             ####        ################        ####
  0x00, 0x78, 0xF8, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, //            ####    #################################
  0x00, 0x78, 0xF8, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, //            ####    ##################################
  0x00, 0x3C, 0x00, 0xFE, 0x7F, 0x00, 0x3C, 0x00, //           ####           ##############           ####
  0x00, 0x3C, 0x80, 0xF9, 0xDF, 0x01, 0x3C, 0x00, //           ####         ##  ########## ###         ####
  0x00, 0x1E, 0x00, 0xF6, 0x37, 0x00, 0x78, 0x00, //          ####            ## ####### ##             ####
  0x00, 0x0F, 0x80, 0xEB, 0xCF, 0x00, 0x78, 0x00, //         ####           ### # #######  ##           ####
  0x00, 0x0F, 0xE0, 0xF4, 0xB6, 0x03, 0xF0, 0x00, //         ####         ###  # #### ## ## ###          ####
  0x80, 0x07, 0x30, 0xF2, 0x2A, 0x06, 0xE0, 0x01, //        ####         ##   #  #### # # #   ##          ####
  0x80, 0x07, 0x00, 0xA8, 0x0A, 0x00, 0xE0, 0x01, //        ####                # # # # #                 ####
  0xC0, 0x03, 0x00, 0xAC, 0x16, 0x00, 0xC0, 0x03, //       ####                ## # # ## #                 ####
  0xC0, 0x03, 0x00, 0x84, 0x30, 0x00, 0xC0, 0x03, //       ####                #    #    ##                ####
  0xE0, 0x01, 0x00, 0x86, 0x20, 0x00, 0x80, 0x07, //      ####                ##    #     #                 ####
  0xF0, 0x00, 0x00, 0x82, 0x60, 0x00, 0x80, 0x07, //     ####                 #     #     ##                ####
  0xF0, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x0F, //     ####                       #                        ####
  0x78, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x1E, //    ####                        #                         ####
  0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, //    ####                                                  ####
  0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, //   ############################################################
  0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, //   ############################################################
  0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, //   ############################################################
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //
  0x08, 0xBB, 0x1B, 0xC6, 0xE6, 0xEC, 0x4E, 0x06, //    #    ## ### ### ##    ##   ## ##  ###  ## ### ###  #  ##
  0x88, 0x8A, 0x28, 0xAA, 0x4A, 0x4A, 0xA4, 0x0A, //    #   # # #   #   # #   # # # # # #  #  # #  #   #  # # # #
  0x88, 0x8A, 0x28, 0xAA, 0x4A, 0x4A, 0xA4, 0x0A, //    #   # # #   #   # #   # # # # # #  #  # #  #   #  # # # #
  0x88, 0xBB, 0x19, 0xE6, 0x4A, 0x4E, 0xA4, 0x0A, //    #   ### ### ##  ##    ##  ### # #  #  ###  #   #  # # # #
  0x88, 0xA2, 0x28, 0xAA, 0x4A, 0x4A, 0xA4, 0x0A, //    #   # #   # #   # #   # # # # # #  #  # #  #   #  # # # #
  0x88, 0xA2, 0x28, 0xAA, 0x4A, 0x4A, 0xA4, 0x0A, //    #   # #   # #   # #   # # # # # #  #  # #  #   #  # # # #
  0xB8, 0xBA, 0x2B, 0xAA, 0xE6, 0x4A, 0x4E, 0x0A, //    ### # # ### ### # #   # # # # ##  ### # #  #  ###  #  # #
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //
};


void setup() {

  pinMode(6, OUTPUT);
  analogWrite(6, 150);

  u8g2.begin();
  for (int x = 127; x > 50; x--) {
    delay(5);
    u8g2.firstPage();
    do {
      u8g2.drawBox(x, 34, 127 - x, 2);
      //u8g2.drawXBMP( 0, 0, 128, 64, intro);
    } while ( u8g2.nextPage() );
  }
  delay(100);
  analogWrite(6, 50);
  delay(50);
  analogWrite(6, 150);
  delay(50);

  u8g2.firstPage();
  do {
    u8g2.drawXBMP( 0, 0, 64, 64, intro);
    u8g2.drawBox(50, 34, 127 - 50, 2);
    u8g2.setFont(u8g2_font_saikyosansbold8_8u);
    u8g2.drawStr(50, 8, "LASERGRBL");
  } while ( u8g2.nextPage() );

  delay(2000);

  u8g2.firstPage();
  do {
    u8g2.drawXBMP( 0, 0, 64, 64, intro);
    u8g2.drawBox(50, 34, 127 - 50, 2);
    u8g2.setFont(u8g2_font_saikyosansbold8_8u);
    u8g2.drawStr(50, 8, "LASERGRBL");
    u8g2.setFont(u8g2_font_5x7_tf);
    u8g2.drawStr(45, 16, "TEMP. MONITORING");
    u8g2.drawStr(54, 24, "TIME COUNTING");
    u8g2.drawStr(65, 32, "AND CLOCK");
    u8g2.drawStr(108, 63, "HK89");
  } while ( u8g2.nextPage() );

}
void loop() {
  // put your main code here, to run repeatedly

}
